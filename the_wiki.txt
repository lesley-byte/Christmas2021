 Shout out to Adafruit!!! This is really their code badly mashed up.   Anyway...small hint:
 If you enter the repl and type:
 >>> from adafruit_hid.keycode import Keycode
 >>> print(dir(Keycode))
 
 
 then you will get the list of possible keycodes.  This can be helpful in certain circumstances. Here is a copy of that list as of 11/2/21:
 ['__class__', '__module__', '__name__', '__qualname__', '__bases__', '__dict__', 'C', 'M', 'A',
 'B', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V',
 'W', 'X', 'Y', 'Z', 'ONE', 'TWO', 'THREE', 'FOUR', 'FIVE', 'SIX', 'SEVEN', 'EIGHT', 'NINE',
 'ZERO', 'ENTER', 'RETURN', 'ESCAPE', 'BACKSPACE', 'TAB', 'SPACEBAR', 'SPACE', 'MINUS', 'EQUALS',
 'LEFT_BRACKET', 'RIGHT_BRACKET', 'BACKSLASH', 'POUND', 'SEMICOLON', 'QUOTE', 'GRAVE_ACCENT',
 'COMMA', 'PERIOD', 'FORWARD_SLASH', 'CAPS_LOCK', 'F1', 'F2', 'F3', 'F4', 'F5', 'F6', 'F7', 'F8',
 'F9', 'F10', 'F11', 'F12', 'PRINT_SCREEN', 'SCROLL_LOCK', 'PAUSE', 'INSERT', 'HOME', 'PAGE_UP',
 'DELETE', 'END', 'PAGE_DOWN', 'RIGHT_ARROW', 'LEFT_ARROW', 'DOWN_ARROW', 'UP_ARROW',
 'KEYPAD_NUMLOCK', 'KEYPAD_FORWARD_SLASH', 'KEYPAD_ASTERISK', 'KEYPAD_MINUS', 'KEYPAD_PLUS',
 'KEYPAD_ENTER', 'KEYPAD_ONE', 'KEYPAD_TWO', 'KEYPAD_THREE', 'KEYPAD_FOUR', 'KEYPAD_FIVE',
 'KEYPAD_SIX', 'KEYPAD_SEVEN', 'KEYPAD_EIGHT', 'KEYPAD_NINE', 'KEYPAD_ZERO', 'KEYPAD_PERIOD',
 'KEYPAD_BACKSLASH', 'APPLICATION', 'POWER', 'KEYPAD_EQUALS', 'F13', 'F14', 'F15', 'F16', 'F17',
 'F18', 'F19', 'F20', 'F21', 'F22', 'F23', 'F24', 'LEFT_CONTROL', 'CONTROL', 'LEFT_SHIFT', 'SHIFT',
 'LEFT_ALT', 'ALT', 'OPTION', 'LEFT_GUI', 'GUI', 'WINDOWS', 'COMMAND', 'RIGHT_CONTROL',
 'RIGHT_SHIFT', 'RIGHT_ALT', 'RIGHT_GUI', 'modifier_bit']  

 If you need to include two buttons pressed then use brackets like this:  [Keycode.CONTROL, Keycode.A]
 
 Note: If certain keys are not fully supported by the example Keycode module, you may be able to work around this:

* If you absolutely must have an unsupported character then you may replace the Key Sequence for that key with something that follows the pattern of:
 [ "Example Character" ] be aware that this key will only do this character or sequence of characters...it will not change when you hold down'Shift' or 'Control'

* If you need the key to type a sentence then you may replace the Key Sequence for that key with something that follows the pattern of:
 ["Example sentence"]

* If you need the key to enter two different keys at the same time then you may replace the Key Sequence for that Key with something that follows the pattern of:
 [ Keycode.LEFT_CONTROL, Keycode.C ] (this would make it a copy button)  Please note that in this example the order of the key presses may matter.

* If you find yourself trying to enter a complex series of key presses and find that the keyboard continues to press Keycode.LEFT_CONTROL, for instance, you may want to
 replace the Key Sequence for that Key with something that follows the pattern of:
 [ Keycode.LEFT_CONTROL, -Keycode.LEFT_CONTROL ]  (note the placement of the '-' to designate that you wish to stop pressing that key)
